<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
          body,
          .desktop-image{
            position: relative


          },
          .mobile-image {
            padding-top: 0;
            padding-bottom: 0;
            margin-top: 0;
            margin-bottom: 0;
          }

          img {
            width: 100%;
            height: auto;
          }

          .desktop-image {
            display: block;
          }

          .mobile-image {
            display: none;
          }
          .grid-container {
            position: absolute;
                display: grid;
                grid-template-columns: repeat(5, 1fr); /* 5 columns */
                grid-template-rows: repeat(2, auto); /* 2 rows */
                grid-gap: {{ section.settings.vertical_space }}px {{ section.settings.horizontal_space }}px; /* Vertical and horizontal spacing */
            }

          .positioned-div {
            position: absolute;
            left: calc({{ section.settings.x_position }} / 3360 * 100%);
            top: calc({{ section.settings.y_position }} / 1800 * 100%);
            width: calc({{ section.settings.width }} / 3360 * 100%);
            height: calc({{ section.settings.height }} / 1800 * 100%);
            background-color: rgba(0, 0, 0, 0);

          }

          .positioned-div:hover {
            background-color: {{ section.settings.button_color | append: '80' }};
          }

      .full-size-link {
        display: block;
        width: 100%;
        height: 100%;
      }



          @media screen and (max-width: 768px) {
            .desktop-image {
              display: none;
            }

            .mobile-image {
              display: block;
            }
          }
    </style>
    <script>
    function getRandomColor() {
      const getRandomValue = () => Math.floor(Math.random() * 106) + 150; // Values between 150 and 255
      const r = getRandomValue();
      const g = getRandomValue();
      const b = getRandomValue();
      return `rgb(${r}, ${g}, ${b})`;
    }

    document.addEventListener('DOMContentLoaded', (event) => {
      const divs = document.querySelectorAll('.desktop-image, .mobile-image');
      divs.forEach(div => {
        div.style.backgroundColor = getRandomColor();
      });
    });
    </script>
  </head>

  <body>
    <!-- Desktop Image -->
    <div class="desktop-image">
      {% if section.settings.image_link %}
        <a href="{{ section.settings.image_link }}">
      {% endif %}
      <img
        src="{{ section.settings.desktop_image | image_url }}"
        alt=""
        width="2048"
        height="2048"
      >
      {% if section.settings.image_link %}
        </a>
      {% endif %}

      <div class="positioned-div">
        <a href="{{ section.settings.link_url_1 }}" class="full-size-link"> </a>
      </div>

      <div class="grid-container">
        {% for i in (1..5) %}
          {% capture link_key %}link_url_{{ i }}{% endcapture %}
          <div style="background-color: {{ section.settings.button_color }};">
            <a href="{{ section.settings[link_key] }}" class="full-size-link"> haha</a>
          </div>
        {% endfor %}
      </div>
    </div>

    <!-- Mobile Image -->
    <div class="mobile-image">
      {% if section.settings.image_link %}
        <a href="{{ section.settings.image_link }}">
      {% endif %}
      <img
        src="{% if section.settings.mobile_image != blank %}{{ section.settings.mobile_image | image_url }}{% else %}{{ section.settings.desktop_image | image_url }}{% endif %}"
        alt=""
        width="768"
        height="768"
      >
      {% if section.settings.image_link %}
        </a>
      {% endif %}
    </div>
  </body>

  {% schema %}
{
  "name": "Res Product Catagories",
  "settings": [
    {
      "type": "image_picker",
      "id": "desktop_image",
      "label": "Upload Desktop Image"
    },
    {
      "type": "image_picker",
      "id": "mobile_image",
      "label": "Upload Mobile Image"
    },
    {
      "type": "url",
      "id": "image_link",
      "label": "Image Link"
    },
    {
      "type": "number",
      "id": "x_position",
      "label": "X Position",
      "default": 74
    },
    {
      "type": "number",
      "id": "y_position",
      "label": "Y Position",
        "default": 367
    },
    {
      "type": "number",
      "id": "width",
      "label": "Width",
      "default": 571
    },
    {
      "type": "number",
      "id": "height",
      "label": "Height",
      "default": 523
    },
    {
      "type": "number",
      "id": "vertical_space",
      "label": "Vertical Space",
      "default": 140
    },
    {
      "type": "number",
      "id": "horizontal_space",
      "label": "Horizontal Space",
      "default": 90
    }
    ,
    {
        "type": "url",
        "id": "link_url_1",
        "label": "Link URL 1"
    },
    {
        "type": "url",
        "id": "link_url_2",
        "label": "Link URL 2"
    },
    {
        "type": "url",
        "id": "link_url_3",
        "label": "Link URL 3"
    },
    {
        "type": "url",
        "id": "link_url_4",
        "label": "Link URL 4"
    },
    {
        "type": "url",
        "id": "link_url_5",
        "label": "Link URL 5"
    },
    {
        "type": "url",
        "id": "link_url_6",
        "label": "Link URL 6"
    },
    {
        "type": "url",
        "id": "link_url_7",
        "label": "Link URL 7"
    },
    {
        "type": "url",
        "id": "link_url_8",
        "label": "Link URL 8"
    },
    {
        "type": "url",
        "id": "link_url_9",
        "label": "Link URL 9"
    },
    {
        "type": "url",
        "id": "link_url_10",
        "label": "Link URL 10"
    },

    {
      "type": "color",
      "id": "button_color",
      "label": "Button Color",
      "default": "#000000"
    }
  ],
  "presets": [
    {
      "name": "Res Product Catagories",
      "category": "Custom"
    }
  ]
}
  {% endschema %}
</html>
